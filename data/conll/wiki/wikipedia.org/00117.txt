# newdoc id = 00117
# newpar id = 00117-p1
# par_text = INTERCAL
# sent_id = 00117-p1-s1
# text = INTERCAL
1	INTERCAL	_	_	_	_	_	_	_	_

# newpar id = 00117-p2
# par_text = INTERCAL — один из старейших эзотерических языков программирования. Был создан в 1972 году студентами Доном Вудсом и Джеймсом Лайоном как пародия на существующие языки программирования и как «гимнастика для ума»; как утверждают создатели, его название означает «язык программирования с непроизносимой аббревиатурой» (Compiler Language With No Pronounceable Acronym).
# sent_id = 00117-p2-s1
# text = INTERCAL - один из старейших эзотерических языков программирования.
1	INTERCAL	_	_	_	_	_	_	_	_
2	-	_	_	_	_	_	_	_	_
3	один	_	_	_	_	_	_	_	_
4	из	_	_	_	_	_	_	_	_
5	старейших	_	_	_	_	_	_	_	_
6	эзотерических	_	_	_	_	_	_	_	_
7	языков	_	_	_	_	_	_	_	_
8	программирования	_	_	_	_	_	_	_	SpaceAfter=No
9	.	_	_	_	_	_	_	_	_

# sent_id = 00117-p2-s2
# text = Был создан в 1972 году студентами Доном Вудсом и Джеймсом Лайоном как пародия на существующие языки программирования и как ``гимнастика для ума''; как утверждают создатели, его название означает ``язык программирования с непроизносимой аббревиатурой'' (Compiler Language With No Pronounceable Acronym).
1	Был	_	_	_	_	_	_	_	_
2	создан	_	_	_	_	_	_	_	_
3	в	_	_	_	_	_	_	_	_
4	1972	_	_	_	_	_	_	_	_
5	году	_	_	_	_	_	_	_	_
6	студентами	_	_	_	_	_	_	_	_
7	Доном	_	_	_	_	_	_	_	_
8	Вудсом	_	_	_	_	_	_	_	_
9	и	_	_	_	_	_	_	_	_
10	Джеймсом	_	_	_	_	_	_	_	_
11	Лайоном	_	_	_	_	_	_	_	_
12	как	_	_	_	_	_	_	_	_
13	пародия	_	_	_	_	_	_	_	_
14	на	_	_	_	_	_	_	_	_
15	существующие	_	_	_	_	_	_	_	_
16	языки	_	_	_	_	_	_	_	_
17	программирования	_	_	_	_	_	_	_	_
18	и	_	_	_	_	_	_	_	_
19	как	_	_	_	_	_	_	_	_
20	``	_	_	_	_	_	_	_	SpaceAfter=No
21	гимнастика	_	_	_	_	_	_	_	_
22	для	_	_	_	_	_	_	_	_
23	ума	_	_	_	_	_	_	_	SpaceAfter=No
24	''	_	_	_	_	_	_	_	SpaceAfter=No
25	;	_	_	_	_	_	_	_	_
26	как	_	_	_	_	_	_	_	_
27	утверждают	_	_	_	_	_	_	_	_
28	создатели	_	_	_	_	_	_	_	SpaceAfter=No
29	,	_	_	_	_	_	_	_	_
30	его	_	_	_	_	_	_	_	_
31	название	_	_	_	_	_	_	_	_
32	означает	_	_	_	_	_	_	_	_
33	``	_	_	_	_	_	_	_	SpaceAfter=No
34	язык	_	_	_	_	_	_	_	_
35	программирования	_	_	_	_	_	_	_	_
36	с	_	_	_	_	_	_	_	_
37	непроизносимой	_	_	_	_	_	_	_	_
38	аббревиатурой	_	_	_	_	_	_	_	SpaceAfter=No
39	''	_	_	_	_	_	_	_	_
40	(	_	_	_	_	_	_	_	SpaceAfter=No
41	Compiler	_	_	_	_	_	_	_	_
42	Language	_	_	_	_	_	_	_	_
43	With	_	_	_	_	_	_	_	_
44	No	_	_	_	_	_	_	_	_
45	Pronounceable	_	_	_	_	_	_	_	_
46	Acronym	_	_	_	_	_	_	_	SpaceAfter=No
47	)	_	_	_	_	_	_	_	SpaceAfter=No
48	.	_	_	_	_	_	_	_	_

# newpar id = 00117-p3
# par_text = Принципиально отличается от академических и практических языков программирования, многие стандартные операции в нём оказываются нетривиальными, например, простейшим способом присвоить переменной значение 65536 является конструкция: . Авторы насытили язык парадоксальными операторами, такими как , и даже («пожалуйста, воздержись от вычислений»). Даже для символов были созданы специальные имена, например, кавычки и знак равенства называются соответственно «кроличьи уши» и «полрешётки» (имеется в виду половина знака ).
# sent_id = 00117-p3-s1
# text = Принципиально отличается от академических и практических языков программирования, многие стандартные операции в нём оказываются нетривиальными, например, простейшим способом присвоить переменной значение 65536 является конструкция:.
1	Принципиально	_	_	_	_	_	_	_	_
2	отличается	_	_	_	_	_	_	_	_
3	от	_	_	_	_	_	_	_	_
4	академических	_	_	_	_	_	_	_	_
5	и	_	_	_	_	_	_	_	_
6	практических	_	_	_	_	_	_	_	_
7	языков	_	_	_	_	_	_	_	_
8	программирования	_	_	_	_	_	_	_	SpaceAfter=No
9	,	_	_	_	_	_	_	_	_
10	многие	_	_	_	_	_	_	_	_
11	стандартные	_	_	_	_	_	_	_	_
12	операции	_	_	_	_	_	_	_	_
13	в	_	_	_	_	_	_	_	_
14	нём	_	_	_	_	_	_	_	_
15	оказываются	_	_	_	_	_	_	_	_
16	нетривиальными	_	_	_	_	_	_	_	SpaceAfter=No
17	,	_	_	_	_	_	_	_	_
18	например	_	_	_	_	_	_	_	SpaceAfter=No
19	,	_	_	_	_	_	_	_	_
20	простейшим	_	_	_	_	_	_	_	_
21	способом	_	_	_	_	_	_	_	_
22	присвоить	_	_	_	_	_	_	_	_
23	переменной	_	_	_	_	_	_	_	_
24	значение	_	_	_	_	_	_	_	_
25	65536	_	_	_	_	_	_	_	_
26	является	_	_	_	_	_	_	_	_
27	конструкция	_	_	_	_	_	_	_	SpaceAfter=No
28	:	_	_	_	_	_	_	_	SpaceAfter=No
29	.	_	_	_	_	_	_	_	_

# sent_id = 00117-p3-s2
# text = Авторы насытили язык парадоксальными операторами, такими как, и даже (``пожалуйста, воздержись от вычислений'').
1	Авторы	_	_	_	_	_	_	_	_
2	насытили	_	_	_	_	_	_	_	_
3	язык	_	_	_	_	_	_	_	_
4	парадоксальными	_	_	_	_	_	_	_	_
5	операторами	_	_	_	_	_	_	_	SpaceAfter=No
6	,	_	_	_	_	_	_	_	_
7	такими	_	_	_	_	_	_	_	_
8	как	_	_	_	_	_	_	_	SpaceAfter=No
9	,	_	_	_	_	_	_	_	_
10	и	_	_	_	_	_	_	_	_
11	даже	_	_	_	_	_	_	_	_
12	(	_	_	_	_	_	_	_	SpaceAfter=No
13	``	_	_	_	_	_	_	_	SpaceAfter=No
14	пожалуйста	_	_	_	_	_	_	_	SpaceAfter=No
15	,	_	_	_	_	_	_	_	_
16	воздержись	_	_	_	_	_	_	_	_
17	от	_	_	_	_	_	_	_	_
18	вычислений	_	_	_	_	_	_	_	SpaceAfter=No
19	''	_	_	_	_	_	_	_	SpaceAfter=No
20	)	_	_	_	_	_	_	_	SpaceAfter=No
21	.	_	_	_	_	_	_	_	_

# sent_id = 00117-p3-s3
# text = Даже для символов были созданы специальные имена, например, кавычки и знак равенства называются соответственно ``кроличьи уши'' и ``полрешётки'' (имеется в виду половина знака).
1	Даже	_	_	_	_	_	_	_	_
2	для	_	_	_	_	_	_	_	_
3	символов	_	_	_	_	_	_	_	_
4	были	_	_	_	_	_	_	_	_
5	созданы	_	_	_	_	_	_	_	_
6	специальные	_	_	_	_	_	_	_	_
7	имена	_	_	_	_	_	_	_	SpaceAfter=No
8	,	_	_	_	_	_	_	_	_
9	например	_	_	_	_	_	_	_	SpaceAfter=No
10	,	_	_	_	_	_	_	_	_
11	кавычки	_	_	_	_	_	_	_	_
12	и	_	_	_	_	_	_	_	_
13	знак	_	_	_	_	_	_	_	_
14	равенства	_	_	_	_	_	_	_	_
15	называются	_	_	_	_	_	_	_	_
16	соответственно	_	_	_	_	_	_	_	_
17	``	_	_	_	_	_	_	_	SpaceAfter=No
18	кроличьи	_	_	_	_	_	_	_	_
19	уши	_	_	_	_	_	_	_	SpaceAfter=No
20	''	_	_	_	_	_	_	_	_
21	и	_	_	_	_	_	_	_	_
22	``	_	_	_	_	_	_	_	SpaceAfter=No
23	полрешётки	_	_	_	_	_	_	_	SpaceAfter=No
24	''	_	_	_	_	_	_	_	_
25	(	_	_	_	_	_	_	_	SpaceAfter=No
26	имеется	_	_	_	_	_	_	_	_
27	в	_	_	_	_	_	_	_	_
28	виду	_	_	_	_	_	_	_	_
29	половина	_	_	_	_	_	_	_	_
30	знака	_	_	_	_	_	_	_	SpaceAfter=No
31	)	_	_	_	_	_	_	_	SpaceAfter=No
32	.	_	_	_	_	_	_	_	_

# newpar id = 00117-p4
# par_text = Несмотря на всю экзотичность, INTERCAL является полным по Тьюрингу, то есть на нём можно выразить всё, что и на обычном языке программирования.
# sent_id = 00117-p4-s1
# text = Несмотря на всю экзотичность, INTERCAL является полным по Тьюрингу, то есть на нём можно выразить всё, что и на обычном языке программирования.
1	Несмотря	_	_	_	_	_	_	_	_
2	на	_	_	_	_	_	_	_	_
3	всю	_	_	_	_	_	_	_	_
4	экзотичность	_	_	_	_	_	_	_	SpaceAfter=No
5	,	_	_	_	_	_	_	_	_
6	INTERCAL	_	_	_	_	_	_	_	_
7	является	_	_	_	_	_	_	_	_
8	полным	_	_	_	_	_	_	_	_
9	по	_	_	_	_	_	_	_	_
10	Тьюрингу	_	_	_	_	_	_	_	SpaceAfter=No
11	,	_	_	_	_	_	_	_	_
12	то	_	_	_	_	_	_	_	_
13	есть	_	_	_	_	_	_	_	_
14	на	_	_	_	_	_	_	_	_
15	нём	_	_	_	_	_	_	_	_
16	можно	_	_	_	_	_	_	_	_
17	выразить	_	_	_	_	_	_	_	_
18	всё	_	_	_	_	_	_	_	SpaceAfter=No
19	,	_	_	_	_	_	_	_	_
20	что	_	_	_	_	_	_	_	_
21	и	_	_	_	_	_	_	_	_
22	на	_	_	_	_	_	_	_	_
23	обычном	_	_	_	_	_	_	_	_
24	языке	_	_	_	_	_	_	_	_
25	программирования	_	_	_	_	_	_	_	SpaceAfter=No
26	.	_	_	_	_	_	_	_	_

# newpar id = 00117-p5
# par_text = Парадоксальные задумки INTERCAL послужили идейной основой при создании последовавших за ним ещё более изощрённых эзотерических языков, таких как Befunge, Brainfuck, Malbolge, Unlambda.
# sent_id = 00117-p5-s1
# text = Парадоксальные задумки INTERCAL послужили идейной основой при создании последовавших за ним ещё более изощрённых эзотерических языков, таких как Befunge, Brainfuck, Malbolge, Unlambda.
1	Парадоксальные	_	_	_	_	_	_	_	_
2	задумки	_	_	_	_	_	_	_	_
3	INTERCAL	_	_	_	_	_	_	_	_
4	послужили	_	_	_	_	_	_	_	_
5	идейной	_	_	_	_	_	_	_	_
6	основой	_	_	_	_	_	_	_	_
7	при	_	_	_	_	_	_	_	_
8	создании	_	_	_	_	_	_	_	_
9	последовавших	_	_	_	_	_	_	_	_
10	за	_	_	_	_	_	_	_	_
11	ним	_	_	_	_	_	_	_	_
12	ещё	_	_	_	_	_	_	_	_
13	более	_	_	_	_	_	_	_	_
14	изощрённых	_	_	_	_	_	_	_	_
15	эзотерических	_	_	_	_	_	_	_	_
16	языков	_	_	_	_	_	_	_	SpaceAfter=No
17	,	_	_	_	_	_	_	_	_
18	таких	_	_	_	_	_	_	_	_
19	как	_	_	_	_	_	_	_	_
20	Befunge	_	_	_	_	_	_	_	SpaceAfter=No
21	,	_	_	_	_	_	_	_	_
22	Brainfuck	_	_	_	_	_	_	_	SpaceAfter=No
23	,	_	_	_	_	_	_	_	_
24	Malbolge	_	_	_	_	_	_	_	SpaceAfter=No
25	,	_	_	_	_	_	_	_	_
26	Unlambda	_	_	_	_	_	_	_	SpaceAfter=No
27	.	_	_	_	_	_	_	_	_

