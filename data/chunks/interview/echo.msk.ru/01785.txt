А ПЛЮЩЕВ	Таких более сложных.
Д АНИКИН	Да. Сейчас просто приведу очень показательный пример. Вот когда пассажир заказывает машину, то как вы думаете, какая машина должна приехать к пассажиру? Вот их же много, да? Вот есть много свободных машин. Они все где-то находятся. Вот какая машина должна к нему приехать?
А ПЛЮЩЕВ	Ну, та, которая доедет быстрее.
Д АНИКИН	Да.
А ПЛЮЩЕВ	И необязательно ближайшая, потому что ближайшая не всегда приедет быстрее.
Д АНИКИН	Естественно. Ну, по пробкам, да. Вот это первое, что приходит на ум. Но, на самом деле, это самый простой алгоритм и понятный, но это не самый лучший алгоритм с точки зрения максимизации количества поездок. Допустим, вам приедет какая-то машина, которая самая быстрая, то, может быть, она кому-то другому не достанется, и он просто не поедет. А вы могли бы уехать на другой, которая была бы не такая быстрая, а на 5 секунд, допустим, позже приехала.
А ПЛЮЩЕВ	Я бы этого практически не почувствовал.
Д АНИКИН	Да. Дальше смотрите. Вы, допустим, ждете машину 3 минуты, а потом уходите. Кто-то другой – 4, кто-то – 5. У каждого пользователя есть своя история. То есть каждый по-разному к этому относится.